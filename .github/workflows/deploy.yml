name: Build, Test, and Deploy Docker Image

on:
  push:
    branches:
      - main # Change this to your deployment branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to DockerHub (or GitHub Container Registry)
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build Docker Image
      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .

      # Step 5: Run Unit Tests (if tests are part of the container)
      - name: Run tests in Docker container
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/my-app:latest npm test  # Adjust to your test command

      # Step 6: Push Docker Image to Registry
      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      # Step 7: Optionally Deploy the Docker image to your server
      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Set up SSH connection (replace with your actual deploy script)
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your-server "docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest && docker run -d my-app-container"
